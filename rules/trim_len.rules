##get lengths of sequnces that were trimmed
rule get_trimmed_len_r:
    input:
        PRIMER_TRIM_FP + "/{sample}_r_trimmed.log"
    output:
        PRIMER_TRIM_FP + "/{sample}_r_trimmed_len.txt"
    params:
        samp_name = "{sample}".strip()
    shell:
        """
        tail -n +2 {input} | cut -f3 | awk '{{print "{params.samp_name}\t"$0"\treverse"}}' > {output}
        """

rule get_trimmed_len_f:
    input:
        PRIMER_TRIM_FP + "/{sample}_rf_trimmed.log"
    output:
        PRIMER_TRIM_FP + "/{sample}_rf_trimmed_len.txt"
    params:
        samp_name = "{sample}".strip()
    shell:
        """
        tail -n +2 {input} | cut -f3 | awk '{{print "{params.samp_name}\t"$0"\tforward"}}' > {output}
        """

rule get_trimmings:
    input:
        [expand(PRIMER_TRIM_FP + "/{sample}_r_trimmed_len.txt", sample = SAMPLE_IDS) +
         expand(PRIMER_TRIM_FP + "/{sample}_rf_trimmed_len.txt", sample = SAMPLE_IDS)]
    output:
        READ_DIR + "/trim_len.tsv"
    shell:
        """
        echo "SampleID\tlength\tdirection" > {output} && \
        cat {input} >> {output}
        """

##get top sequences from non-control samples that were trimmed by alignment
rule trim_match_r:
    input:
        PRIMER_TRIM_FP + "/{sample}_r_trimmed.log"
    output:
        PRIMER_TRIM_FP + "/{sample}_r_trimmed_matches.txt"
    params:
        samp_name = "{sample}".strip()
    shell:
        """
        grep -vE "No match" {input} | \
        cut -f2,3,5 | sort | uniq -c | sed 's/^\s\+//g' | sed 's/\s/\t/g' | \
        awk '{{print "{params.samp_name}\t"$0"\treverse"}}' > {output}
        """

rule trim_match_f:
    input:
        PRIMER_TRIM_FP + "/{sample}_rf_trimmed.log"
    output:
        PRIMER_TRIM_FP + "/{sample}_rf_trimmed_matches.txt"
    params:
        samp_name = "{sample}".strip()
    shell:
        """
        grep -vE "No match" {input} | \
        cut -f2,3,5 | sort | uniq -c | sed 's/^\s\+//g' | sed 's/\s/\t/g' | \
        awk '{{print "{params.samp_name}\t"$0"\tforward"}}' > {output}
        """

rule count_trimmings:
    input:
        [expand(PRIMER_TRIM_FP + "/{sample}_r_trimmed_matches.txt", sample = SAMPLE_IDS) +
         expand(PRIMER_TRIM_FP + "/{sample}_rf_trimmed_matches.txt", sample = SAMPLE_IDS)]
    output:
        READ_DIR + "/trimmed_seq.tsv"
    shell:
        """
        echo "SampleID\tcount\ttrim_type\ttrim_pos\tsequence\tdirection" > {output} && \
        cat {input} >> {output}
        """